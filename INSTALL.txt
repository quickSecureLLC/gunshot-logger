GUNSHOT LOGGER - RASPBERRY PI INSTALLATION GUIDE
==================================================

FRESH RASPBERRY PI SETUP (NO VIRTUAL ENVIRONMENT)
ENHANCED WITH RELIABLE USB MOUNTING AND DEVICE DETECTION

PREREQUISITES:
- Raspberry Pi 3 or 4 with Raspberry Pi OS
- Google Voice Hat or compatible I2S microphone
- USB drive for storage (insert before running setup)
- Internet connection

QUICK SETUP (RECOMMENDED):
==========================

# One-command installation with automatic USB detection and mounting
curl -sSL https://raw.githubusercontent.com/quickSecureLLC/gunshot-logger/main/setup_raspberry_pi.sh | bash

# OR clone and run locally
cd ~
git clone https://github.com/quickSecureLLC/gunshot-logger.git
cd gunshot-logger
chmod +x setup_raspberry_pi.sh
./setup_raspberry_pi.sh

MANUAL SETUP STEPS:
===================

STEP 1: Install Required Packages (No OS Updates)
-------------------------------------------------
sudo apt install -y python3 python3-pip git alsa-utils util-linux python3-numpy python3-scipy python3-psutil

STEP 2: Install Additional Python Packages
------------------------------------------
pip3 install sounddevice --break-system-packages

STEP 3: Clone Repository
------------------------
cd ~
git clone https://github.com/quickSecureLLC/gunshot-logger.git
cd gunshot-logger

STEP 4: Setup USB Drive (Automatic Detection)
---------------------------------------------
# Insert USB drive before running this step
# The setup script will automatically:
# - Detect USB drive and get UUID
# - Create mount point: /media/pi/gunshots
# - Add to /etc/fstab for auto-mount on boot
# - Mount the drive

# Manual USB setup (if automatic fails):
sudo mkdir -p /media/pi/gunshots
sudo chown pi:pi /media/pi/gunshots

# Find your USB device:
lsblk

# Get UUID (replace /dev/sda1 with your device):
sudo blkid /dev/sda1

# Add to /etc/fstab (replace UUID with your actual UUID):
echo "UUID=YOUR-UUID /media/pi/gunshots vfat defaults,noatime,uid=1000,gid=1000 0 2" | sudo tee -a /etc/fstab

# Mount:
sudo mount /media/pi/gunshots

STEP 5: Configure Audio System (Automatic Detection)
---------------------------------------------------
# The setup script will automatically:
# - Detect I2S/Google Voice Hat audio card
# - Create proper ALSA configuration
# - Test audio system

# Manual audio setup (if automatic fails):
# Check available audio devices:
aplay -l

# Create ALSA configuration (replace 2 with your card number):
sudo tee /etc/asound.conf > /dev/null <<EOF
pcm.!default {
    type hw
    card 2
    device 0
}

ctl.!default {
    type hw
    card 2
}
EOF

STEP 6: Test Audio System
-------------------------
python3 test_audio.py

STEP 7: Create System Service (With Pre-checks)
-----------------------------------------------
sudo tee /etc/systemd/system/gunshot-logger.service > /dev/null <<EOF
[Unit]
Description=Gunshot Detection and Logging Service
After=multi-user.target

[Service]
Type=simple
User=pi
WorkingDirectory=/home/pi/gunshot-logger
Environment="PYTHONUNBUFFERED=1"
ExecStartPre=/bin/bash -c 'if ! mountpoint -q /media/pi/gunshots; then echo "USB not mounted, attempting to mount..."; mount /media/pi/gunshots || exit 1; fi'
ExecStartPre=/bin/bash -c 'if [ ! -w /media/pi/gunshots ]; then echo "USB not writable"; exit 1; fi'
ExecStart=/usr/bin/python3 /home/pi/gunshot-logger/gunshot_logger.py
Restart=always
RestartSec=5
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF

STEP 8: Enable and Start Service
--------------------------------
sudo systemctl daemon-reload
sudo systemctl enable gunshot-logger.service
sudo systemctl start gunshot-logger.service

STEP 9: Verify Installation
----------------------------
# Run comprehensive verification:
./verify_setup.sh

# Or check manually:
sudo systemctl status gunshot-logger.service
sudo journalctl -u gunshot-logger.service -f
ls -la /media/pi/gunshots/

CONFIGURATION:
==============

Edit gunshot_logger.py to adjust settings:

- DETECTION_THRESHOLD: -15 (adjust for your environment)
- OPERATING_HOURS: 09:00 to 19:00 (adjust as needed)
- ALSA_DEVICE: Auto-detected (or change if needed)

MONITORING COMMANDS:
====================

Check Service Status:
sudo systemctl status gunshot-logger.service

View Real-time Logs:
sudo journalctl -u gunshot-logger.service -f

View Recent Logs:
sudo journalctl -u gunshot-logger.service --since "1 hour ago"

Check Recorded Files:
ls -la /media/pi/gunshots/

Restart Service:
sudo systemctl restart gunshot-logger.service

USB MOUNTING HELPERS:
====================

If USB drive is not mounted:
./mount_usb.sh

Check USB status:
mountpoint -q /media/pi/gunshots && echo "Mounted" || echo "Not mounted"

Manual mount by device:
sudo mount /dev/sda1 /media/pi/gunshots

Manual mount by UUID:
sudo mount UUID=your-uuid /media/pi/gunshots

TROUBLESHOOTING:
================

1. No Audio Detected:
   aplay -l
   cat /etc/asound.conf
   arecord -D hw:2,0 -c 2 -r 48000 -f S16_LE -d 5 test.wav

2. Service Won't Start:
   sudo journalctl -u gunshot-logger.service -n 50
   pip3 list | grep -E "(numpy|sounddevice|scipy|psutil)"

3. USB Drive Issues:
   ./mount_usb.sh
   lsblk
   df -h | grep media
   cat /etc/fstab

4. Too Many False Positives:
   Increase DETECTION_THRESHOLD in gunshot_logger.py

5. Silent Audio Files:
   python3 test_audio.py
   Check audio device configuration

ENHANCED FEATURES:
==================

✓ Automatic USB drive detection and UUID-based mounting
✓ Auto-mount on boot via /etc/fstab
✓ Dynamic audio card detection
✓ Service pre-checks for USB mount and writability
✓ Comprehensive verification script
✓ Enhanced troubleshooting tools
✓ Retry logic for unreliable operations
✓ Detailed logging and error reporting

TESTING:
========

1. Make a loud sound (clap, etc.)
2. Check if files are created: ls -la /media/pi/gunshots/
3. Verify files have audio: play a WAV file
4. Check logs: sudo journalctl -u gunshot-logger.service -f
5. Run verification: ./verify_setup.sh

PERFORMANCE TUNING:
===================

- Monitor CPU: htop
- Check memory: free -h
- Monitor disk: df -h
- Adjust DETECTION_THRESHOLD for your environment

SUPPORT:
========

For issues:
1. Run: ./verify_setup.sh
2. Run: ./troubleshoot.sh
3. Check logs: sudo journalctl -u gunshot-logger.service -f
4. Check setup log: cat setup.log

The system will automatically detect gunshots during operating hours
and save them to your USB drive with proper audio content.
USB drive will auto-mount on boot and the service includes pre-checks
to ensure everything is working before starting. 